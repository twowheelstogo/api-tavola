version: 2
jobs:
  build:
    docker:
      - image: node:14.18.1

    steps:
      - checkout

      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}

  deploy:
    docker:
      - image: node:14.18.1

    dependencies:
      pre:
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npx semantic-release

  lint:
    docker:
      - image: node:14.18.1

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm run lint

  test:
    docker:
      - image: node:14.18.1

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm run test

  test-integration:
    docker:
      - image: circleci/node:14.18.1-stretch
      # Integration tests need MongoDB server running and accessible on port 27017
      - image: circleci/mongo:4.2.0
        command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
        ports:
          - "27017:27017"
    steps:
      - checkout
      - run:
          name: Run Integration Tests
          environment:
            MONGO_URL: mongodb://localhost:27017/test
            MONGO_USE_UNIFIED_TOPOLOGY: false
          command: npx --quiet --package @reactioncommerce/ci-scripts@1.12.2 run-integration-tests

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - test-integration:
          requires:
            - build
      - deploy:
          context: reaction-publish-semantic-release
          requires:
            - lint
            - test
            - test-integration
          filters:
            branches:
              only: trunk
